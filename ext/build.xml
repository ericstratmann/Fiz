<?xml version="1.0" encoding="UTF-8"?>

<project name="@@EXTENSION_NAME" default="build" basedir=".">

    <target name="clean" description="Removes all generated files">
        <delete dir="${outdir}"/>
    </target>

    <target name="compile" description="Compile from source">
        <!-- Compile the sources -->
        <mkdir dir="${classdir}"/>
        <javac srcdir="src" destdir="${classdir}" classpathref="classpath"/>
        <!-- Create the jar file for this extension -->
        <mkdir dir="${genlibdir}"/>
        <jar destfile="${genlibdir}/${extname}.jar" basedir="${classdir}"/>
    </target>
    
    <target name="test-compile" depends="compile"
            description="Compile unit tests">
        <mkdir dir="${testclassdir}"/>
        <javac destdir="${testclassdir}" srcdir="test">
            <classpath refid="classpath.test"/>
        </javac>
    </target>
    
    <target name="test" depends="compile,test-compile"
            description="Execute unit tests" >
        <junit fork="yes">
            <classpath refid="classpath.test" />
            <formatter type="brief" usefile="false"/>
            <sysproperty key="fiz.location" value="${my.fiz.location}"/>

            <batchtest>
                <fileset dir="${testclassdir}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build" description="Builds this extension"
            depends="compile, javadoc">
        <!-- Copy the jar files to be included in the extension build -->
        <mkdir dir="${builddir}/${libdir}"/>
        <copy todir="${builddir}/${libdir}">
            <fileset dir="${genlibdir}"/>
            <fileset dir="${libdir}" excludes="README"/>
        </copy>
        
        <!-- Copy the javadoc files -->
        <mkdir dir="${builddir}/javadoc"/>
        <copy todir="${builddir}/javadoc">
            <fileset dir="${docdir}"/>
        </copy>

        <!-- Copy static resources used by this extension -->
        <mkdir dir="${builddir}/static"/>
        <copy todir="${builddir}/static">
            <fileset dir="static" excludes="README"/>
        </copy>

        <!-- Copy config and css files used by the extension -->
        <mkdir dir="${builddir}/config"/>
        <copy todir="${builddir}/config">
            <fileset dir="config" excludes="README"/>
        </copy>
        <mkdir dir="${builddir}/css"/>
        <copy todir="${builddir}/css">
            <fileset dir="css" excludes="README"/>
        </copy>
    </target>
    
    <target name="package" depends="build" description="Packages this extension">
        <!-- Create a manifest file -->
        <manifest file="${outdir}/MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Implementation-Title" value="${extname}"/>
            <attribute name="Implementation-Version" value="${version}"/>
        </manifest>

        <!-- Create the documentation zipfile -->
        <zip destfile="${outdir}/${extname}-doc-${version}.zip">
            <zipfileset dir="${docdir}" prefix="${extname}-doc-${version}"/>
        </zip>
        
        <!-- Create the binary extension zipfile -->
        <zip destfile="${outdir}/${extname}-bin-${version}.zip">
            <zipfileset dir="${builddir}" prefix="${extname}"/>
        </zip>

        <!-- Create the source extension zipfile -->
        <zip destfile="${outdir}/${extname}-src-${version}.zip">
            <zipfileset dir="${builddir}" prefix="${extname}"/>
            <zipfileset file="build.xml" prefix="${extname}"/>
            <zipfileset dir="src" prefix="${extname}/src"/>
            <zipfileset dir="test" prefix="${extname}/test"/>
            <zipfileset dir="lib" prefix="${extname}/lib"/>
        </zip>

        <!-- Create the overarching package zipfile -->
        <zip destfile="${outdir}/${extname}-pkg-${version}.zip">
            <zipfileset dir="${outdir}">
                <include name="${extname}-bin-${version}.zip"/>
                <include name="${extname}-src-${version}.zip"/>
                <include name="${extname}-doc-${version}.zip"/>
            </zipfileset>
        </zip>
    </target>
    
    <target name="javadoc" depends="compile" 
            description="Creates javadoc for this extension">
        <mkdir dir="${docdir}"/>
        <javadoc destdir="${docdir}"
                 public="true"
                 Windowtitle="${extname} documentation"
                 docletpathref="classpath"
                 doclet="org.fiz.FizDoc">
            <classpath>
                <path refid="classpath"/>
            </classpath>
            <fileset dir="src">
                <exclude name="README"/>
            </fileset>
        </javadoc>
        <concat destfile="${docdir}/stylesheet.css" append="true">
            <filelist dir="${my.fiz.location}" files="javadoc.css"/>
        </concat>
    </target>

    <!-- The version number of this extension -->
    <property name="version" value="1.0.0"/>

    <!-- The symbolic name of this extension. This name should be unique
     across all Fiz extensions -->
    <property name="extname" value="${ant.project.name}"/>

    <!-- The directory containing Java libraries (.jar files) -->
    <property name="libdir" value="lib"/>

    <!-- The directory for the files generated by the build -->
    <property name="outdir" value="out"/>

    <!-- The directory in which Java classes are compiled -->
    <property name="classdir" value="${outdir}/classes"/>
    
    <!-- The directory containing generated libraries -->
    <property name="genlibdir" value="${outdir}/lib"/>

    <!-- The directory in which Java test classes are compiled. -->
    <property name="testclassdir" value="${outdir}/tests" />

    <!-- The directory in which the installer is generated -->
    <property name="builddir" value="${outdir}/${extname}"/>

    <!-- The directory in which Javadocs are created -->
    <property name="docdir" value="${outdir}/javadoc"/>
    
    <!-- Loads into ${fiz.location} the application-relative 
     location of the default Fiz tools installation to use -->
    <property file="../../fiz.properties"/>
    
    <!-- The directory containing the fiz installation to use.  By 
     default this is set to ../../${fiz.location}.  If you wish to 
     specify a different Fiz tools installation to use, change the 
     value of the property below -->
    <property name="my.fiz.location" value="../../${fiz.location}"/>
    
    
    <path id="classpath">
        <fileset dir="${libdir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${my.fiz.location}/${libdir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${my.fiz.location}/${genlibdir}" erroronmissingdir="false">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.test">
        <pathelement location="${classdir}"/>
        <pathelement location="${testclassdir}"/>
        <path refid="classpath"/>
    </path>
    
</project>
